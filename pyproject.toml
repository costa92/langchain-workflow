[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "wheel"]

[project]
authors = [
  {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
  "langchain",
  "langgraph",
  "fastapi",
  "pydantic",
  "uvicorn",
  "langchain_openai",
  "langchain_anthropic",
  "langchain_deepseek",
  "IPython",
  "Pillow",
  "python-dotenv", # 修改为 python-dotenv 以支持环境变量加载
  "pytest", # 添加测试依赖
  "pytest-env", # 添加测试环境变量支持
  "anyio",
  "pytest-asyncio", # 支持异步测试
  "pytest-tornasync", # 支持Tornado异步测试
  "pytest-trio", # 支持Trio异步测试
  "pytest-twisted", # 支持Twisted异步测试
  "twisted", # 
  "langchain_ollama",
  "gTTS",
  "pyttsx3",
  "edge-tts",
  "ChatTTS",
  "torchaudio",
  "torch",
  "numpy",
  "soundfile",
]
description = "A demo project for Langchain"
license = {file = "LICENSE"}
name = "langchain-workflow"
readme = "README.md"
requires-python = ">=3.8"
version = "0.1.0"

[tool.setuptools]
packages = {find = {where = ["src"]}}

[tool.setuptools.package-dir]
"" = "src"

[project.scripts]
# 如果有命令行入口，可以在这里定义
# example = "module_name:function_name"

[tool.pytest.ini_options]
# pytest 配置
addopts = "-ra -q"
filterwarnings = [
  "ignore::DeprecationWarning",
]
minversion = "6.0"
pythonpath = ["src"]
testpaths = ["tests"]

[tool.black]
# black 代码格式化配置
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
src_paths = ["."]

[tool.mypy]
# mypy 类型检查配置
disallow_untyped_calls = true
ignore_missing_imports = true
python_version = "3.11"
strict = true
